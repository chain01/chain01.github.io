<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>创之</title>
  
  <subtitle>用心创造快乐</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chainchunqing.xyz/"/>
  <updated>2018-05-28T12:49:46.190Z</updated>
  <id>http://chainchunqing.xyz/</id>
  
  <author>
    <name>如果能编程回忆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常见单词发音</title>
    <link href="http://chainchunqing.xyz/2018/05/28/fayin/"/>
    <id>http://chainchunqing.xyz/2018/05/28/fayin/</id>
    <published>2018-05-28T12:45:56.000Z</published>
    <updated>2018-05-28T12:49:46.190Z</updated>
    
    <content type="html"><![CDATA[<p>中国程序员容易发音错误的单词<br><a id="more"></a></p><h2 id="中国程序员容易发音错误的单词-点击喇叭可收听正确读音"><a href="#中国程序员容易发音错误的单词-点击喇叭可收听正确读音" class="headerlink" title="中国程序员容易发音错误的单词(点击喇叭可收听正确读音)"></a>中国程序员容易发音错误的单词(点击喇叭可收听正确读音)</h2><table><thead><tr><th>单词</th><th>正确发音</th><th>错误发音</th></tr></thead><tbody><tr><td>access <a href="http://dict.youdao.com/dictvoice?audio=access&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ækses]</td><td>❌ [ək’ses]</td></tr><tr><td>agile <a href="http://dict.youdao.com/dictvoice?audio=agile&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ædʒaɪl]</td><td>❌ [ə’dʒaɪl]</td></tr><tr><td>amazon <a href="http://dict.youdao.com/dictvoice?audio=amazon&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘æməzən]</td><td>❌ [‘əmeizən; ə’meizən]</td></tr><tr><td>analogy <a href="http://dict.youdao.com/dictvoice?audio=analogy&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [əˈnælədʒi]</td><td>❌ [ænə’lɒdʒi]</td></tr><tr><td>Angular <a href="http://dict.youdao.com/dictvoice?audio=Angular&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘æŋgjʊlə]</td><td>❌ [‘æŋɡələ; ‘æŋdʒʌlə]</td></tr><tr><td>AJAX <a href="http://dict.youdao.com/dictvoice?audio=AJAX&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘eidʒæks]</td><td>❌ [ə’dʒʌks]</td></tr><tr><td>alias <a href="http://dict.youdao.com/dictvoice?audio=alias&amp;type=2" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈeɪliəs]</td><td>❌ [ə’lais]</td></tr><tr><td>Apache <a href="http://dict.youdao.com/dictvoice?audio=Apache&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ə’pætʃɪ]</td><td>❌ [ʌpʌtʃ]</td></tr><tr><td>app <a href="http://dict.youdao.com/dictvoice?audio=app&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [æp]</td><td>❌ [eipi’pi]</td></tr><tr><td>archive <a href="http://dict.youdao.com/dictvoice?audio=archive&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ɑːkaɪv]</td><td>❌ [‘ətʃɪv]</td></tr><tr><td>array <a href="http://dict.youdao.com/dictvoice?audio=array&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ə’rei]</td><td>❌ [æ’rei]</td></tr><tr><td>ASCII <a href="http://dict.youdao.com/dictvoice?audio=ascii&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘æski]</td><td>❌ [ɑːsk]</td></tr><tr><td>aspect <a href="http://dict.youdao.com/dictvoice?audio=aspect&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘æspekt]</td><td>❌ [ə’spekt]</td></tr><tr><td>avatar <a href="http://dict.youdao.com/dictvoice?audio=avatar&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ævətɑː]</td><td>❌ [ə’vʌtɑ]</td></tr><tr><td>Azure <a href="http://dict.youdao.com/dictvoice?audio=azure&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘æʒə]</td><td>❌ [ˈæzʊʒə]</td></tr><tr><td>bind <a href="http://dict.youdao.com/dictvoice?audio=bind&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [baɪnd]</td><td>❌ [bɪnd]</td></tr><tr><td>cache <a href="http://dict.youdao.com/dictvoice?audio=cache&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [kæʃ]</td><td>❌ [kætʃ]</td></tr><tr><td>Daemon <a href="http://dict.youdao.com/dictvoice?audio=Daemon&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘diːmən]</td><td>❌ [[dæmən]]</td></tr><tr><td>deny <a href="http://dict.youdao.com/dictvoice?audio=deny&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [dɪ’naɪ]</td><td>❌ [‘dæni]</td></tr><tr><td>deque <a href="http://dict.youdao.com/dictvoice?audio=deque&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘dek]</td><td>❌ [di’kju]</td></tr><tr><td>digest <a href="http://dict.youdao.com/dictvoice?audio=digest&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ n. [‘dɑɪdʒɛst] v. [dɑɪ’dʒɛst]</td><td>❌ [‘dɪgɛst]</td></tr><tr><td>Django <a href="http://dict.youdao.com/dictvoice?audio=Django&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈdʒæŋɡoʊ]</td><td>❌ [diˈdʒæŋɡoʊ]</td></tr><tr><td>doc <a href="http://dict.youdao.com/dictvoice?audio=doc&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [dɒk]</td><td>❌ [daʊk]</td></tr><tr><td>facade <a href="http://dict.youdao.com/dictvoice?audio=facade&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [fə’sɑːd]</td><td>❌ [‘feikeid]</td></tr><tr><td>fedora <a href="http://dict.youdao.com/dictvoice?audio=fedora&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [fɪ’dɔːrə]</td><td>❌ [‘fedərə]</td></tr><tr><td>Git <a href="http://dict.youdao.com/dictvoice?audio=git&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ɡɪt]</td><td>❌ [dʒɪt]</td></tr><tr><td>GNU <a href="https://upload.wikimedia.org/wikipedia/commons/2/24/En-gnu.ogg" target="_blank" rel="noopener">🔊</a></td><td>✅ [gnu:]</td><td></td></tr><tr><td>GUI <a href="http://dict.youdao.com/dictvoice?audio=GUI&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈɡui]</td><td></td></tr><tr><td>Haskell <a href="http://dict.youdao.com/dictvoice?audio=haskell&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈhæskəl]</td><td>❌ [hæˈskəl]</td></tr><tr><td>height <a href="http://dict.youdao.com/dictvoice?audio=height&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [haɪt]</td><td>❌ [heɪt]</td></tr><tr><td>hidden <a href="http://dict.youdao.com/dictvoice?audio=hidden&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘hɪdn]</td><td>❌ [‘haɪdn]</td></tr><tr><td>image <a href="http://dict.youdao.com/dictvoice?audio=image&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ɪmɪdʒ]</td><td>❌ [ɪ’meɪdʒ]</td></tr><tr><td>integer <a href="http://dict.youdao.com/dictvoice?audio=integer&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ɪntɪdʒə]</td><td>❌ [ˈɪntaɪgə]</td></tr><tr><td>issue <a href="http://dict.youdao.com/dictvoice?audio=issue&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ɪʃuː]</td><td>❌ [ˈaɪʃuː]</td></tr><tr><td>Java <a href="http://dict.youdao.com/dictvoice?audio=java&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘dʒɑːvə]</td><td>❌ [‘dʒɑːvɑː]</td></tr><tr><td>jpg(jpeg) <a href="http://dict.youdao.com/dictvoice?audio=JPEG&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘dʒeɪpeɡ]</td><td>❌ [ˈdʒeɪˈpi:ˈdʒiː]</td></tr><tr><td>lambda <a href="http://dict.youdao.com/dictvoice?audio=lambda&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈlæmdə]</td><td>❌ [ˈlɒŋmdɑ]</td></tr><tr><td>linear <a href="http://dict.youdao.com/dictvoice?audio=linear&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘lɪnɪə]</td><td>❌ [‘laɪə]</td></tr><tr><td>Linux <a href="http://dict.youdao.com/dictvoice?audio=linux&amp;type=2" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘lɪnəks]</td><td>❌ [ˈlɪnʌks; ˈlɪnjuːks]</td></tr><tr><td>locale <a href="http://dict.youdao.com/dictvoice?audio=locale&amp;type=2" target="_blank" rel="noopener">🔊</a></td><td>✅ [ləʊ’kɑːl]</td><td>❌ [ˈloʊk(ə)l]</td></tr><tr><td>main <a href="http://dict.youdao.com/dictvoice?audio=main&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [meɪn]</td><td>❌ [mɪn]</td></tr><tr><td>margin <a href="http://dict.youdao.com/dictvoice?audio=margin&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘mɑːdʒɪn]</td><td>❌ [‘mʌgɪn]</td></tr><tr><td>matrix <a href="http://dict.youdao.com/dictvoice?audio=matrix&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈmeɪtrɪks]</td><td>❌ [ˈmɑ:trɪks]</td></tr><tr><td>maven <a href="http://dict.youdao.com/dictvoice?audio=maven&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘meɪvn]</td><td>❌ [‘maːvn]</td></tr><tr><td>Microsoft <a href="http://dict.youdao.com/dictvoice?audio=Microsoft&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘maikrəusɔft]</td><td>❌ [‘mikrəusɔft]</td></tr><tr><td>module <a href="http://dict.youdao.com/dictvoice?audio=module&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘mɒdjuːl]</td><td>❌ [‘məʊdl]</td></tr><tr><td>nginx</td><td>✅ Engine X</td><td></td></tr><tr><td>null <a href="http://dict.youdao.com/dictvoice?audio=null&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [nʌl]</td><td>❌ [naʊ]</td></tr><tr><td>OS X</td><td>✅ OS ten</td><td></td></tr><tr><td>phantom <a href="http://dict.youdao.com/dictvoice?audio=phantom&amp;type=2" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘fæntəm]</td><td>❌ [‘pæntəm]</td></tr><tr><td>parameter <a href="http://dict.youdao.com/dictvoice?audio=parameter&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [pə’ræmɪtə]</td><td>❌ [‘pærəmɪtə]</td></tr><tr><td>putty <a href="http://dict.youdao.com/dictvoice?audio=putty&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈpʌti]</td><td>❌ [ˈpuːti]</td></tr><tr><td>query <a href="http://dict.youdao.com/dictvoice?audio=query&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘kwɪəri]</td><td>❌ [‘kwaɪri]</td></tr><tr><td>Qt <a href="http://dict.youdao.com/dictvoice?audio=cute&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [kjuːt]</td><td></td></tr><tr><td>Realm <a href="http://dict.youdao.com/dictvoice?audio=realm&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [relm]</td><td>❌ [riəlm]</td></tr><tr><td>resolved <a href="http://dict.youdao.com/dictvoice?audio=resolved&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [rɪ’zɒlvd]</td><td>❌ [rɪ’səʊvd]</td></tr><tr><td>resort <a href="http://dict.youdao.com/dictvoice?audio=resort&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [rɪˈzɔ:t]</td><td>❌ [rɪˈsɔ:t]</td></tr><tr><td>retina <a href="http://dict.youdao.com/dictvoice?audio=retina&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘retɪnə]</td><td>❌ [ri’tina]</td></tr><tr><td>san jose <a href="http://dict.youdao.com/dictvoice?audio=san%20jose&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [sænhəu’zei]</td><td>❌ [sæn’ju:s]</td></tr><tr><td>safari <a href="http://dict.youdao.com/dictvoice?audio=safari&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [sə’fɑːrɪ]</td><td>❌ [sæfərɪ]</td></tr><tr><td>scheme <a href="http://dict.youdao.com/dictvoice?audio=scheme&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [skiːm]</td><td>❌ [s’kæmə]</td></tr><tr><td>SQL</td><td>✅ [ˈsiːkwəl]/[ˈesˈkjuːˈel]</td><td></td></tr><tr><td>sudo</td><td>✅ [‘suːduː]</td><td></td></tr><tr><td>suite <a href="http://dict.youdao.com/dictvoice?audio=suite&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [swiːt]</td><td>❌ [sjuːt]</td></tr><tr><td>typical <a href="http://dict.youdao.com/dictvoice?audio=typical&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘tɪpɪkl]</td><td>❌ [‘taɪpɪkəl]</td></tr><tr><td>Ubuntu <a href="http://dict.youdao.com/dictvoice?audio=ubuntu&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ʊ’bʊntʊ]</td><td>❌ [juː’bʊntʊ]</td></tr><tr><td>variable <a href="http://dict.youdao.com/dictvoice?audio=variable&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘veəriəbl]</td><td>❌ [və’raiəbl]</td></tr><tr><td>vue <a href="http://dict.youdao.com/dictvoice?audio=vue&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [v’ju:]</td><td>❌ [v’ju:i]</td></tr><tr><td>width <a href="http://dict.youdao.com/dictvoice?audio=width&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [wɪdθ]</td><td>❌ [waɪdθ]</td></tr><tr><td>YouTube <a href="http://dict.youdao.com/dictvoice?audio=youtube&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘juː’tjuːb]</td><td>❌ [‘juː’tʊbɪ]</td></tr></tbody></table><blockquote><p>本着简单的原则, 又为了避免程序猿们出现选择困难症, ‘正确音标’采用了最接近有道词典音频的英式 DJ 音标, 不代表其唯一性.<br>专业在线英语词典请参考<a href="https://www.zhihu.com/question/19707759" target="_blank" rel="noopener">知乎链接:在线英语词典哪个比较好?</a></p></blockquote><blockquote><p>参考资料</p><ol><li><a href="https://www.zhihu.com/question/19739907" target="_blank" rel="noopener">https://www.zhihu.com/question/19739907</a></li><li><a href="https://www.v2ex.com/t/131094" target="_blank" rel="noopener">https://www.v2ex.com/t/131094</a></li><li><a href="https://www.v2ex.com/t/309350" target="_blank" rel="noopener">https://www.v2ex.com/t/309350</a></li><li><a href="https://www.v2ex.com/t/63781" target="_blank" rel="noopener">https://www.v2ex.com/t/63781</a></li><li><a href="https://www.v2ex.com/t/246033" target="_blank" rel="noopener">https://www.v2ex.com/t/246033</a></li><li><a href="https://www.v2ex.com/t/342087" target="_blank" rel="noopener">https://www.v2ex.com/t/342087</a></li></ol></blockquote><h4 id="读对了所有的单词？"><a href="#读对了所有的单词？" class="headerlink" title="读对了所有的单词？"></a>读对了所有的单词？</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;中国程序员容易发音错误的单词&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://chainchunqing.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="其他" scheme="http://chainchunqing.xyz/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>c语言tcp编程</title>
    <link href="http://chainchunqing.xyz/2018/05/22/c%E8%AF%AD%E8%A8%80tcp%E7%BC%96%E7%A8%8B/"/>
    <id>http://chainchunqing.xyz/2018/05/22/c语言tcp编程/</id>
    <published>2018-05-22T13:43:19.000Z</published>
    <updated>2018-05-22T13:47:20.545Z</updated>
    
    <content type="html"><![CDATA[<p>C语言tcp编程，Linux系统实现<br><a id="more"></a><br>下面是TCP通信的demo：</p><p>##服务器端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">/*socket tcp服务器端*/  </span><br><span class="line">#include &lt;sys/stat.h&gt;  </span><br><span class="line">#include &lt;fcntl.h&gt;  </span><br><span class="line">#include &lt;errno.h&gt;  </span><br><span class="line">#include &lt;netdb.h&gt;  </span><br><span class="line">#include &lt;sys/types.h&gt;  </span><br><span class="line">#include &lt;sys/socket.h&gt;  </span><br><span class="line">#include &lt;netinet/in.h&gt;  </span><br><span class="line">#include &lt;arpa/inet.h&gt;  </span><br><span class="line">  </span><br><span class="line">#include &lt;stdio.h&gt;  </span><br><span class="line">#include &lt;string.h&gt;  </span><br><span class="line">#include &lt;stdlib.h&gt;  </span><br><span class="line">#include &lt;unistd.h&gt;  </span><br><span class="line">  </span><br><span class="line">#define SERVER_PORT 5555  </span><br><span class="line">  </span><br><span class="line">/* </span><br><span class="line"> 监听后，一直处于accept阻塞状态， </span><br><span class="line"> 直到有客户端连接， </span><br><span class="line"> 当客户端如数quit后，断开与客户端的连接 </span><br><span class="line"> */  </span><br><span class="line">  </span><br><span class="line">int main()  </span><br><span class="line">&#123;  </span><br><span class="line">    //调用socket函数返回的文件描述符  </span><br><span class="line">    int serverSocket;  </span><br><span class="line">    //声明两个套接字sockaddr_in结构体变量，分别表示客户端和服务器  </span><br><span class="line">    struct sockaddr_in server_addr;  </span><br><span class="line">    struct sockaddr_in clientAddr;  </span><br><span class="line">    int addr_len = sizeof(clientAddr);  </span><br><span class="line">    int client;  </span><br><span class="line">    char buffer[200];  </span><br><span class="line">    int iDataNum;  </span><br><span class="line">      </span><br><span class="line">    //socket函数，失败返回-1  </span><br><span class="line">    //int socket(int domain, int type, int protocol);  </span><br><span class="line">    //第一个参数表示使用的地址类型，一般都是ipv4，AF_INET  </span><br><span class="line">    //第二个参数表示套接字类型：tcp：面向连接的稳定数据传输SOCK_STREAM  </span><br><span class="line">    //第三个参数设置为0  </span><br><span class="line">    if((serverSocket = socket(AF_INET, SOCK_STREAM, 0)) &lt; 0)  </span><br><span class="line">    &#123;  </span><br><span class="line">        perror(&quot;socket&quot;);  </span><br><span class="line">        return 1;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    bzero(&amp;server_addr, sizeof(server_addr));  </span><br><span class="line">    //初始化服务器端的套接字，并用htons和htonl将端口和地址转成网络字节序  </span><br><span class="line">    server_addr.sin_family = AF_INET;  </span><br><span class="line">    server_addr.sin_port = htons(SERVER_PORT);  </span><br><span class="line">    //ip可是是本服务器的ip，也可以用宏INADDR_ANY代替，代表0.0.0.0，表明所有地址  </span><br><span class="line">    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);  </span><br><span class="line">    //对于bind，accept之类的函数，里面套接字参数都是需要强制转换成(struct sockaddr *)  </span><br><span class="line">    //bind三个参数：服务器端的套接字的文件描述符，  </span><br><span class="line">    if(bind(serverSocket, (struct sockaddr *)&amp;server_addr, sizeof(server_addr)) &lt; 0)  </span><br><span class="line">    &#123;  </span><br><span class="line">        perror(&quot;connect&quot;);  </span><br><span class="line">        return 1;  </span><br><span class="line">    &#125;  </span><br><span class="line">    //设置服务器上的socket为监听状态  </span><br><span class="line">    if(listen(serverSocket, 5) &lt; 0)   </span><br><span class="line">    &#123;  </span><br><span class="line">        perror(&quot;listen&quot;);  </span><br><span class="line">        return 1;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    while(1)  </span><br><span class="line">    &#123;  </span><br><span class="line">        printf(&quot;Listening on port: %d\n&quot;, SERVER_PORT);  </span><br><span class="line">        //调用accept函数后，会进入阻塞状态  </span><br><span class="line">        //accept返回一个套接字的文件描述符，这样服务器端便有两个套接字的文件描述符，  </span><br><span class="line">        //serverSocket和client。  </span><br><span class="line">        //serverSocket仍然继续在监听状态，client则负责接收和发送数据  </span><br><span class="line">        //clientAddr是一个传出参数，accept返回时，传出客户端的地址和端口号  </span><br><span class="line">        //addr_len是一个传入-传出参数，传入的是调用者提供的缓冲区的clientAddr的长度，以避免缓冲区溢出。  </span><br><span class="line">        //传出的是客户端地址结构体的实际长度。  </span><br><span class="line">        //出错返回-1  </span><br><span class="line">        client = accept(serverSocket, (struct sockaddr*)&amp;clientAddr, (socklen_t*)&amp;addr_len);  </span><br><span class="line">        if(client &lt; 0)  </span><br><span class="line">        &#123;  </span><br><span class="line">            perror(&quot;accept&quot;);  </span><br><span class="line">            continue;  </span><br><span class="line">        &#125;  </span><br><span class="line">        printf(&quot;\nrecv client data...n&quot;);  </span><br><span class="line">        //inet_ntoa   ip地址转换函数，将网络字节序IP转换为点分十进制IP  </span><br><span class="line">        //表达式：char *inet_ntoa (struct in_addr);  </span><br><span class="line">        printf(&quot;IP is %s\n&quot;, inet_ntoa(clientAddr.sin_addr));  </span><br><span class="line">        printf(&quot;Port is %d\n&quot;, htons(clientAddr.sin_port));  </span><br><span class="line">        while(1)  </span><br><span class="line">        &#123;  </span><br><span class="line">            iDataNum = recv(client, buffer, 1024, 0);  </span><br><span class="line">            if(iDataNum &lt; 0)  </span><br><span class="line">            &#123;  </span><br><span class="line">                perror(&quot;recv&quot;);  </span><br><span class="line">                continue;  </span><br><span class="line">            &#125;  </span><br><span class="line">            buffer[iDataNum] = &apos;\0&apos;;  </span><br><span class="line">            if(strcmp(buffer, &quot;quit&quot;) == 0)  </span><br><span class="line">                break;  </span><br><span class="line">            printf(&quot;%drecv data is %s\n&quot;, iDataNum, buffer);  </span><br><span class="line">            send(client, buffer, iDataNum, 0);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    return 0;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>##客户端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">/*socket tcp客户端*/  </span><br><span class="line">#include &lt;sys/stat.h&gt;  </span><br><span class="line">#include &lt;fcntl.h&gt;  </span><br><span class="line">#include &lt;errno.h&gt;  </span><br><span class="line">#include &lt;netdb.h&gt;  </span><br><span class="line">#include &lt;sys/types.h&gt;  </span><br><span class="line">#include &lt;sys/socket.h&gt;  </span><br><span class="line">#include &lt;netinet/in.h&gt;  </span><br><span class="line">#include &lt;arpa/inet.h&gt;  </span><br><span class="line">  </span><br><span class="line">#include &lt;stdio.h&gt;  </span><br><span class="line">#include &lt;string.h&gt;  </span><br><span class="line">#include &lt;stdlib.h&gt;  </span><br><span class="line">#include &lt;unistd.h&gt;  </span><br><span class="line">  </span><br><span class="line">#define SERVER_PORT 5555  </span><br><span class="line">  </span><br><span class="line">/* </span><br><span class="line"> 连接到服务器后，会不停循环，等待输入， </span><br><span class="line"> 输入quit后，断开与服务器的连接 </span><br><span class="line"> */  </span><br><span class="line">  </span><br><span class="line">int main()  </span><br><span class="line">&#123;  </span><br><span class="line">    //客户端只需要一个套接字文件描述符，用于和服务器通信  </span><br><span class="line">    int clientSocket;  </span><br><span class="line">    //描述服务器的socket  </span><br><span class="line">    struct sockaddr_in serverAddr;  </span><br><span class="line">    char sendbuf[200];  </span><br><span class="line">    char recvbuf[200];  </span><br><span class="line">    int iDataNum;  </span><br><span class="line">    if((clientSocket = socket(AF_INET, SOCK_STREAM, 0)) &lt; 0)  </span><br><span class="line">    &#123;  </span><br><span class="line">        perror(&quot;socket&quot;);  </span><br><span class="line">        return 1;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    serverAddr.sin_family = AF_INET;  </span><br><span class="line">    serverAddr.sin_port = htons(SERVER_PORT);  </span><br><span class="line">    //指定服务器端的ip，本地测试：127.0.0.1  </span><br><span class="line">    //inet_addr()函数，将点分十进制IP转换成网络字节序IP  </span><br><span class="line">    serverAddr.sin_addr.s_addr = inet_addr(&quot;127.0.0.1&quot;);  </span><br><span class="line">    if(connect(clientSocket, (struct sockaddr *)&amp;serverAddr, sizeof(serverAddr)) &lt; 0)  </span><br><span class="line">    &#123;  </span><br><span class="line">        perror(&quot;connect&quot;);  </span><br><span class="line">        return 1;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    printf(&quot;connect with destination host...\n&quot;);  </span><br><span class="line">  </span><br><span class="line">    while(1)  </span><br><span class="line">    &#123;  </span><br><span class="line">        printf(&quot;Input your world:&gt;&quot;);  </span><br><span class="line">        scanf(&quot;%s&quot;, sendbuf);  </span><br><span class="line">        printf(&quot;\n&quot;);  </span><br><span class="line">  </span><br><span class="line">        send(clientSocket, sendbuf, strlen(sendbuf), 0);  </span><br><span class="line">        if(strcmp(sendbuf, &quot;quit&quot;) == 0)  </span><br><span class="line">            break;  </span><br><span class="line">        iDataNum = recv(clientSocket, recvbuf, 200, 0);  </span><br><span class="line">        recvbuf[iDataNum] = &apos;\0&apos;;  </span><br><span class="line">        printf(&quot;recv data of my world is: %s\n&quot;, recvbuf);  </span><br><span class="line">    &#125;  </span><br><span class="line">    close(clientSocket);  </span><br><span class="line">    return 0;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C语言tcp编程，Linux系统实现&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://chainchunqing.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="c语言" scheme="http://chainchunqing.xyz/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>php字符串操作</title>
    <link href="http://chainchunqing.xyz/2018/05/14/php%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/"/>
    <id>http://chainchunqing.xyz/2018/05/14/php字符串操作/</id>
    <published>2018-05-14T13:46:01.000Z</published>
    <updated>2018-05-14T13:49:22.964Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章主要介绍了php中利用explode函数分割字符串到数组<br><a id="more"></a><br>分割字符串 </p><p>//利用 explode 函数分割字符串到数组<br>代码如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$source = &quot;hello1,hello2,hello3,hello4,hello5&quot;;//按逗号分离字符串 </span><br><span class="line">$hello = explode(&apos;,&apos;,$source); </span><br><span class="line"></span><br><span class="line">for($index=0;$index&lt;count($hello);$index++) </span><br><span class="line">&#123; </span><br><span class="line">echo $hello[$index];echo &quot;&lt;/br&gt;&quot;; </span><br><span class="line">&#125; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>//split函数进行字符分割<br>// 分隔符可以是斜线，点，或横线<br>代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$date = &quot;04/30/1973&quot;; </span><br><span class="line">list($month, $day, $year) = split (&apos;[/.-]&apos;, $date); </span><br><span class="line">echo &quot;Month: $month; Day: $day; Year: $year&lt;br /&gt;\n&quot;; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>通过数组实现多条件查询的代码</p><p>代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$keyword=&quot;asp php,jsp&quot;;</span><br><span class="line">$keyword=str_replace(&quot;  &quot;,&quot; &quot;,$keyword);</span><br><span class="line">$keyword=str_replace(&quot; &quot;,&quot;,&quot;,$keyword);</span><br><span class="line">$keyarr=explode(&apos;,&apos;,$keyword); </span><br><span class="line">for($index=0;$index&lt;count($keyarr);$index++) </span><br><span class="line">&#123; </span><br><span class="line">$whereSql .= &quot; And (arc.title like &apos;%$keyarr[$index]%&apos; Or arc.keywords like &apos;%$keyarr[$index]%&apos;) &quot;;</span><br><span class="line">&#125; </span><br><span class="line">echo $whereSql;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章主要介绍了php中利用explode函数分割字符串到数组&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://chainchunqing.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="php" scheme="http://chainchunqing.xyz/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>makefile学习</title>
    <link href="http://chainchunqing.xyz/2018/05/09/makefile/"/>
    <id>http://chainchunqing.xyz/2018/05/09/makefile/</id>
    <published>2018-05-09T11:15:28.000Z</published>
    <updated>2018-05-09T12:36:24.150Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Makeflie基本使用"><a href="#Makeflie基本使用" class="headerlink" title="Makeflie基本使用"></a>Makeflie基本使用</h1><p>makefile是Linux中的一个工具用于在一个工程中处理文件依赖，用于自动编译<br><a id="more"></a></p><h2 id="什么是makefile"><a href="#什么是makefile" class="headerlink" title="什么是makefile"></a>什么是makefile</h2><p>在软件开发中，make是一个工具程序（Utility software），经由读取叫做“makefile”的文件，自动化建构软件。它是一种转化文件形式的工具，转换的目标称为“target”；与此同时，它也检查文件的依赖关系，如果需要的话，它会调用一些外部软件来完成任务。它的依赖关系检查系统非常简单，主要根据依赖文件的修改时间进行判断。大多数情况下，它被用来编译源代码，生成结果代码，然后把结果代码连接起来生成可执行文件或者库文件。它使用叫做“makefile”的文件来确定一个target文件的依赖关系，然后把生成这个target的相关命令传给shell去执行。</p><h2 id="基本语句"><a href="#基本语句" class="headerlink" title="基本语句"></a>基本语句</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">target（要生成的文件）: dependencies（被依赖的文件）</span><br><span class="line">        命令1</span><br><span class="line">        命令2</span><br><span class="line">        命令3</span><br><span class="line">命令前面用的是“tab”而非空格。误用空格是初学者容易犯的错误！</span><br><span class="line">命令可以是任何一个shell能运行的命令。</span><br><span class="line">          .</span><br><span class="line">          .</span><br><span class="line">        命令n</span><br><span class="line">可以使用“\”表示续行。注意，“\”之后不能有空格！</span><br></pre></td></tr></table></figure><p>make会比较targets文件和prerequisites文件的修改日期，如果prerequisites文件的日期要比targets文件的日期要新，或者target不存在的话，那么，make就会执行后续定义的命令。</p><h2 id="简单的实例"><a href="#简单的实例" class="headerlink" title="简单的实例"></a>简单的实例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print.h</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">void printhello();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print.c</span><br><span class="line">#include&quot;print.h&quot;</span><br><span class="line">void printhello()&#123;</span><br><span class="line">printf(&quot;Hello World\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">main.c</span><br><span class="line">#include&quot;print.h&quot;</span><br><span class="line">int main()&#123;</span><br><span class="line">printhello();</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">makefile</span><br><span class="line">helloworld : main.o print.o</span><br><span class="line">gcc -o helloworld main.o print.o</span><br><span class="line"></span><br><span class="line">mian.o : main.c print.h</span><br><span class="line">gcc -c main.c</span><br><span class="line"></span><br><span class="line">print.o : print.c print.h</span><br><span class="line">gcc -c print.c</span><br><span class="line"></span><br><span class="line">clean :</span><br><span class="line">rm helloworld main.o print.o</span><br></pre></td></tr></table></figure><p>用变量替代<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ojb=main.o print.o</span><br><span class="line">helloworld : $(ojb)</span><br><span class="line">gcc -o helloworld $(ojb)</span><br><span class="line"></span><br><span class="line">mian.o : main.c print.h</span><br><span class="line">gcc -c main.c</span><br><span class="line"></span><br><span class="line">print.o : print.c print.h</span><br><span class="line">gcc -c print.c</span><br><span class="line"></span><br><span class="line">clean :</span><br><span class="line">rm helloworld $(ojb)</span><br></pre></td></tr></table></figure></p><p>由make自己推导命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ojb=main.o print.o</span><br><span class="line">helloworld : $(ojb)</span><br><span class="line">gcc -o helloworld $(ojb)</span><br><span class="line"></span><br><span class="line">mian.o : main.c print.h</span><br><span class="line">print.o : print.c print.h</span><br><span class="line">clean :</span><br><span class="line">rm helloworld $(ojb)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Makeflie基本使用&quot;&gt;&lt;a href=&quot;#Makeflie基本使用&quot; class=&quot;headerlink&quot; title=&quot;Makeflie基本使用&quot;&gt;&lt;/a&gt;Makeflie基本使用&lt;/h1&gt;&lt;p&gt;makefile是Linux中的一个工具用于在一个工程中处理文件依赖，用于自动编译&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://chainchunqing.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="http://chainchunqing.xyz/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>c语言</title>
    <link href="http://chainchunqing.xyz/2018/05/04/c%E8%AF%AD%E8%A8%80/"/>
    <id>http://chainchunqing.xyz/2018/05/04/c语言/</id>
    <published>2018-05-04T10:59:07.000Z</published>
    <updated>2018-05-04T11:05:17.029Z</updated>
    
    <content type="html"><![CDATA[<p>vs中 未初始化的变量的值 0Xcc -858993460 烫”：<br>关键词：vs 中 未 初始化 变量 值 0xcc 858993460 烫<br>vc的debug版会把未初始化的指针自动初始化为0xcccccccc，而不是就让它随机去，那是因为debug版的目的是为了方便我们调试程序的，如果野指针的初值不确定，那么每次调试同一个程序就可能出现不一样的结果，比如这次程序崩掉，下次正常运行，再一次虽然没崩掉，但结果不对……那显然对我们解bug是非常不利的。</p><p>__asm{int 3}的一个用处是在exe中可中断，产生调试。int 3 相当于 debugbreak， 机器码就是cc。</p><p>当一个未初始化赋值的时候(至少是vc 下未初始化的内存)默认是0xcccccccc;，他在内存就默认保存为-858993460 即二进制的11001100 11001100 11001100 11001100； 十六进制的cccccccc;而汉字 “烫” 的编码恰好就是1100110011001100:</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vs中 未初始化的变量的值 0Xcc -858993460 烫”：&lt;br&gt;关键词：vs 中 未 初始化 变量 值 0xcc 858993460 烫&lt;br&gt;vc的debug版会把未初始化的指针自动初始化为0xcccccccc，而不是就让它随机去，那是因为debug版的目的是为
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用 Git 命令清单</title>
    <link href="http://chainchunqing.xyz/2018/04/13/git/"/>
    <id>http://chainchunqing.xyz/2018/04/13/git/</id>
    <published>2018-04-13T07:15:24.000Z</published>
    <updated>2018-04-13T07:34:35.651Z</updated>
    
    <content type="html"><![CDATA[<p>git 日常使用命令<br><a id="more"></a><br>一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。<br><img src="https://img-blog.csdn.net/20160101232654486" alt="cmd-markdown-logo"></p><h2 id="下面是我整理的常用-Git-命令清单。几个专用名词的译名如下。"><a href="#下面是我整理的常用-Git-命令清单。几个专用名词的译名如下。" class="headerlink" title="下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。"></a>下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。</h2><blockquote><ul><li>Workspace：工作区</li><li>Index / Stage：暂存区</li><li>Repository：仓库区（或本地仓库）</li><li>Remote：远程仓库</li></ul></blockquote><h2 id="新建代码库"><a href="#新建代码库" class="headerlink" title="新建代码库"></a>新建代码库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 在当前目录新建一个Git代码库</span><br><span class="line">$ git init</span><br><span class="line"></span><br><span class="line"># 新建一个目录，将其初始化为Git代码库</span><br><span class="line">$ git init [project-name]</span><br><span class="line"></span><br><span class="line"># 下载一个项目和它的整个代码历史</span><br><span class="line">$ git clone [url]</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前的Git配置</span><br><span class="line">$ git config --list</span><br><span class="line"></span><br><span class="line"># 编辑Git配置文件</span><br><span class="line">$ git config -e [--global]</span><br><span class="line"></span><br><span class="line"># 设置提交代码时的用户信息</span><br><span class="line">$ git config [--global] user.name &quot;[name]&quot;</span><br><span class="line">$ git config [--global] user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure></p><h2 id="增加-删除文件"><a href="#增加-删除文件" class="headerlink" title="增加/删除文件"></a>增加/删除文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 添加指定文件到暂存区</span><br><span class="line">$ git add [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"># 添加指定目录到暂存区，包括子目录</span><br><span class="line">$ git add [dir]</span><br><span class="line"></span><br><span class="line"># 添加当前目录的所有文件到暂存区</span><br><span class="line">$ git add .</span><br><span class="line"></span><br><span class="line"># 删除工作区文件，并且将这次删除放入暂存区</span><br><span class="line">$ git rm [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"># 停止追踪指定文件，但该文件会保留在工作区</span><br><span class="line">$ git rm --cached [file]</span><br><span class="line"></span><br><span class="line"># 改名文件，并且将这个改名放入暂存区</span><br><span class="line">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure><h2 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 提交暂存区到仓库区</span><br><span class="line">$ git commit -m [message]</span><br><span class="line"></span><br><span class="line"># 提交暂存区的指定文件到仓库区</span><br><span class="line">$ git commit [file1] [file2] ... -m [message]</span><br><span class="line"></span><br><span class="line"># 提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class="line">$ git commit -a</span><br><span class="line"></span><br><span class="line"># 提交时显示所有diff信息</span><br><span class="line">$ git commit -v</span><br><span class="line"></span><br><span class="line"># 使用一次新的commit，替代上一次提交</span><br><span class="line"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br><span class="line">$ git commit --amend -m [message]</span><br><span class="line"></span><br><span class="line"># 重做上一次commit，并包括指定文件的新变化</span><br><span class="line">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有本地分支</span><br><span class="line">$ git branch</span><br><span class="line"></span><br><span class="line"># 列出所有远程分支</span><br><span class="line">$ git branch -r</span><br><span class="line"></span><br><span class="line"># 列出所有本地分支和远程分支</span><br><span class="line">$ git branch -a</span><br><span class="line"></span><br><span class="line"># 新建一个分支，但依然停留在当前分支</span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"></span><br><span class="line"># 新建一个分支，并切换到该分支</span><br><span class="line">$ git checkout -b [branch]</span><br><span class="line"></span><br><span class="line"># 新建一个分支，指向指定commit</span><br><span class="line">$ git branch [branch] [commit]</span><br><span class="line"></span><br><span class="line"># 新建一个分支，与指定的远程分支建立追踪关系</span><br><span class="line">$ git branch --track [branch] [remote-branch]</span><br><span class="line"></span><br><span class="line"># 切换到指定分支，并更新工作区</span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line"></span><br><span class="line"># 建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class="line">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class="line"></span><br><span class="line"># 合并指定分支到当前分支</span><br><span class="line">$ git merge [branch]</span><br><span class="line"></span><br><span class="line"># 选择一个commit，合并进当前分支</span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"></span><br><span class="line"># 删除分支</span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"></span><br><span class="line"># 删除远程分支</span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有tag</span><br><span class="line">$ git tag</span><br><span class="line"></span><br><span class="line"># 新建一个tag在当前commit</span><br><span class="line">$ git tag [tag]</span><br><span class="line"></span><br><span class="line"># 新建一个tag在指定commit</span><br><span class="line">$ git tag [tag] [commit]</span><br><span class="line"></span><br><span class="line"># 删除本地tag</span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"></span><br><span class="line"># 删除远程tag</span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br><span class="line"></span><br><span class="line"># 查看tag信息</span><br><span class="line">$ git show [tag]</span><br><span class="line"></span><br><span class="line"># 提交指定tag</span><br><span class="line">$ git push [remote] [tag]</span><br><span class="line"></span><br><span class="line"># 提交所有tag</span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"></span><br><span class="line"># 新建一个分支，指向某个tag</span><br><span class="line">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure><h2 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># 显示有变更的文件</span><br><span class="line">$ git status</span><br><span class="line"></span><br><span class="line"># 显示当前分支的版本历史</span><br><span class="line">$ git log</span><br><span class="line"></span><br><span class="line"># 显示commit历史，以及每次commit发生变更的文件</span><br><span class="line">$ git log --stat</span><br><span class="line"></span><br><span class="line"># 显示某个文件的版本历史，包括文件改名</span><br><span class="line">$ git log --follow [file]</span><br><span class="line">$ git whatchanged [file]</span><br><span class="line"></span><br><span class="line"># 显示指定文件相关的每一次diff</span><br><span class="line">$ git log -p [file]</span><br><span class="line"></span><br><span class="line"># 显示指定文件是什么人在什么时间修改过</span><br><span class="line">$ git blame [file]</span><br><span class="line"></span><br><span class="line"># 显示暂存区和工作区的差异</span><br><span class="line">$ git diff</span><br><span class="line"></span><br><span class="line"># 显示暂存区和上一个commit的差异</span><br><span class="line">$ git diff --cached [file]</span><br><span class="line"></span><br><span class="line"># 显示工作区与当前分支最新commit之间的差异</span><br><span class="line">$ git diff HEAD</span><br><span class="line"></span><br><span class="line"># 显示两次提交之间的差异</span><br><span class="line">$ git diff [first-branch]...[second-branch]</span><br><span class="line"></span><br><span class="line"># 显示某次提交的元数据和内容变化</span><br><span class="line">$ git show [commit]</span><br><span class="line"></span><br><span class="line"># 显示某次提交发生变化的文件</span><br><span class="line">$ git show --name-only [commit]</span><br><span class="line"></span><br><span class="line"># 显示某次提交时，某个文件的内容</span><br><span class="line">$ git show [commit]:[filename]</span><br><span class="line"></span><br><span class="line"># 显示当前分支的最近几次提交</span><br><span class="line">$ git reflog</span><br></pre></td></tr></table></figure><h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 下载远程仓库的所有变动</span><br><span class="line">$ git fetch [remote]</span><br><span class="line"></span><br><span class="line"># 显示所有远程仓库</span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line"># 显示某个远程仓库的信息</span><br><span class="line">$ git remote show [remote]</span><br><span class="line"></span><br><span class="line"># 增加一个新的远程仓库，并命名</span><br><span class="line">$ git remote add [shortname] [url]</span><br><span class="line"></span><br><span class="line"># 取回远程仓库的变化，并与本地分支合并</span><br><span class="line">$ git pull [remote] [branch]</span><br><span class="line"></span><br><span class="line"># 上传本地指定分支到远程仓库</span><br><span class="line">$ git push [remote] [branch]</span><br><span class="line"></span><br><span class="line"># 强行推送当前分支到远程仓库，即使有冲突</span><br><span class="line">$ git push [remote] --force</span><br><span class="line"></span><br><span class="line"># 推送所有分支到远程仓库</span><br><span class="line">$ git push [remote] --all</span><br></pre></td></tr></table></figure><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 恢复暂存区的指定文件到工作区</span><br><span class="line">$ git checkout [file]</span><br><span class="line"></span><br><span class="line"># 恢复某个commit的指定文件到工作区</span><br><span class="line">$ git checkout [commit] [file]</span><br><span class="line"></span><br><span class="line"># 恢复上一个commit的所有文件到工作区</span><br><span class="line">$ git checkout .</span><br><span class="line"></span><br><span class="line"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><span class="line">$ git reset [file]</span><br><span class="line"></span><br><span class="line"># 重置暂存区与工作区，与上一次commit保持一致</span><br><span class="line">$ git reset --hard</span><br><span class="line"></span><br><span class="line"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><span class="line">$ git reset [commit]</span><br><span class="line"></span><br><span class="line"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span><br><span class="line">$ git reset --hard [commit]</span><br><span class="line"></span><br><span class="line"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br><span class="line">$ git reset --keep [commit]</span><br><span class="line"></span><br><span class="line"># 新建一个commit，用来撤销指定commit</span><br><span class="line"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span><br><span class="line">$ git revert [commit]</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 生成一个可供发布的压缩包</span><br><span class="line">$ git archive</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git 日常使用命令&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://chainchunqing.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="git" scheme="http://chainchunqing.xyz/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>背景美化</title>
    <link href="http://chainchunqing.xyz/2018/04/11/%E8%83%8C%E6%99%AF%E7%BE%8E%E5%8C%96/"/>
    <id>http://chainchunqing.xyz/2018/04/11/背景美化/</id>
    <published>2018-04-11T13:44:16.000Z</published>
    <updated>2018-04-11T13:53:18.716Z</updated>
    
    <content type="html"><![CDATA[<p>页面背景美化<br>　　实现背景图更换及平铺，以及引入动态背景（可交互）<br><a id="more"></a></p><h2 id="静态background设置"><a href="#静态background设置" class="headerlink" title="静态background设置"></a>静态background设置</h2><h3 id="1、打开博客根目录-themes-next-source-css-custom-custom-styl文件，编辑如下："><a href="#1、打开博客根目录-themes-next-source-css-custom-custom-styl文件，编辑如下：" class="headerlink" title="1、打开博客根目录/themes/next/source/css/_custom/custom.styl文件，编辑如下："></a>1、打开博客根目录/themes/next/source/css/_custom/custom.styl文件，编辑如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">body &#123; </span><br><span class="line">background-image: url(/images/background.png);</span><br><span class="line">background-attachment: fixed; // 不随屏幕滚动而滚动</span><br><span class="line">background-repeat: repeat; // 如果背景图不够屏幕大小则重复铺，改为no-repeat则表示不重复铺</span><br><span class="line">background-size: contain; // 等比例铺满屏幕</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、将背景图命名为background-png并放入主题根目录-images下"><a href="#2、将背景图命名为background-png并放入主题根目录-images下" class="headerlink" title="2、将背景图命名为background.png并放入主题根目录/images下"></a>2、将背景图命名为background.png并放入主题根目录/images下</h3><h2 id="动态可交互背景（js引入）"><a href="#动态可交互背景（js引入）" class="headerlink" title="动态可交互背景（js引入）"></a>动态可交互背景（js引入）</h2><h3 id="1、打开博客根目录-themes-next-layout-layout-swig文件，在之前添加代码如下："><a href="#1、打开博客根目录-themes-next-layout-layout-swig文件，在之前添加代码如下：" class="headerlink" title="1、打开博客根目录/themes/next/layout/_layout.swig文件，在之前添加代码如下："></a>1、打开博客根目录/themes/next/layout/_layout.swig文件，在之前添加代码如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;</span><br><span class="line">color=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>属性说明：</p><blockquote><ul><li>color ：线条颜色, 默认: ‘0,0,0’；三个数字分别为(R,G,B)</li><li>opacity: 线条透明度（0~1）, 默认: 0.5</li><li>count: 线条的总数量, 默认: 150</li><li>zIndex: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1</li></ul></blockquote><h3 id="2、打开博客根目录-themes-next-config-yml，找到字段canvas-nest，将其置为true【如果没有找到该字段，请自行添加】"><a href="#2、打开博客根目录-themes-next-config-yml，找到字段canvas-nest，将其置为true【如果没有找到该字段，请自行添加】" class="headerlink" title="2、打开博客根目录/themes/next/_config.yml，找到字段canvas_nest，将其置为true【如果没有找到该字段，请自行添加】"></a>2、打开博客根目录/themes/next/_config.yml，找到字段canvas_nest，将其置为true【如果没有找到该字段，请自行添加】</h3><h3 id="3、hexo-clean-hexo-d-g可以看到效果"><a href="#3、hexo-clean-hexo-d-g可以看到效果" class="headerlink" title="3、hexo clean , hexo d -g可以看到效果~"></a>3、hexo clean , hexo d -g可以看到效果~</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;页面背景美化&lt;br&gt;　　实现背景图更换及平铺，以及引入动态背景（可交互）&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://chainchunqing.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Hexo" scheme="http://chainchunqing.xyz/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>美化</title>
    <link href="http://chainchunqing.xyz/2018/04/11/%E7%82%B9%E5%87%BB/"/>
    <id>http://chainchunqing.xyz/2018/04/11/点击/</id>
    <published>2018-04-11T13:37:08.000Z</published>
    <updated>2018-04-11T13:42:39.566Z</updated>
    
    <content type="html"><![CDATA[<h3>点击特效</h3><p>实现点击出现桃心效果<br><a id="more"></a><br>在网址输入如下：</p><p><code>http://7u2ss1.com1.z0.glb.clouddn.com/love.js</code><br>然后将里面的代码copy一下，新建love.js文件并且将代码复制进去，然后保存。将love.js文件放到路径/themes/next/source/js/src里面，然后打开\themes\next\layout_layout.swig文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3&gt;点击特效&lt;/h3&gt;

&lt;p&gt;实现点击出现桃心效果&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://chainchunqing.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Hexo" scheme="http://chainchunqing.xyz/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Markdown用法</title>
    <link href="http://chainchunqing.xyz/2018/04/11/test/"/>
    <id>http://chainchunqing.xyz/2018/04/11/test/</id>
    <published>2018-04-11T11:11:51.000Z</published>
    <updated>2018-04-11T12:39:41.320Z</updated>
    
    <content type="html"><![CDATA[<p></p><h3>Markdown用法</h3><br>Hexo 是使用Markdown标记语言的，以前没有接触此处学习并记录。<br><a id="more"></a><p></p><h2 id="什么是Markdown"><a href="#什么是Markdown" class="headerlink" title="什么是Markdown"></a>什么是Markdown</h2><p>Markdown具有一系列衍生版本，用于扩展Markdown的功能（如表格、脚注、内嵌HTML等等），这些功能原初的Markdown尚不具备，它们能让Markdown转换成更多的格式，例如LaTeX，Docbook。Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>标题能显示出文章的结构。行首插入1-6个 # ，每增加一个 # 表示更深入层次的内容，对应到标题的深度由 1-6 阶。#号后面应使用空格与标题分隔<br>H1 :# 一级标题<br>H2 :## 二级标题<br>H3 :### 三级标题<br>H4 :#### 四级标题<br>H5 :##### 五级标题<br>H6 :###### 六级标题</p><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><p>带星号的文本样式，在原版Markdown标准中不存在，但在其大部分衍生标准中被添加<br>链接 :<a href="https://www.github.com/chain01" target="_blank" rel="noopener">Title</a><br>加粗 :<strong>Bold</strong><br>斜体字 :<em>Italics</em><br>删除线 :<del>text</del><br>高亮 :==text==<br>段落 : 段落之间空一行<br>换行符 : 一行结束时输入两个空格</p><p>列表 :* 添加星号成为一个新的列表项。<br>引用 :</p><blockquote><p>使用说明，要结束引用需要在引用部分结束后插入一个回车</p></blockquote><p>内嵌代码 : <code>alert(&#39;Hello World&#39;);</code><br>画水平线 (HR) :——–<br>列举</p><blockquote><ul><li>整理知识，学习笔记</li><li>发布日记，杂文，所见所想</li><li>撰写发布技术文稿（代码支持）</li><li>撰写发布学术论文（LaTeX 公式支持）</li></ul></blockquote><p>插入图片<br><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo"></p><ul><li style="list-style: none"><input type="checkbox"> 不选中的框</li><li style="list-style: none"><input type="checkbox" checked> 选中的框</li></ul><h2 id="书写一个质能守恒公式-LaTeX"><a href="#书写一个质能守恒公式-LaTeX" class="headerlink" title="书写一个质能守恒公式[^LaTeX]"></a>书写一个质能守恒公式[^LaTeX]</h2><p>$E=mc^2$</p><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><h2 id="绘制表格"><a href="#绘制表格" class="headerlink" title="绘制表格"></a>绘制表格</h2><table><thead><tr><th>左对齐</th><th style="text-align:right">右对齐</th><th style="text-align:center">居中</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">$1</td><td style="text-align:center">234</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;h3&gt;Markdown用法&lt;/h3&gt;&lt;br&gt;Hexo 是使用Markdown标记语言的，以前没有接触此处学习并记录。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://chainchunqing.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Hexo" scheme="http://chainchunqing.xyz/tags/Hexo/"/>
    
  </entry>
  
</feed>
